#! /bin/gawk -f
# GenGDBScript.awk ---
# Creates a GDB script to debug the application passed as
# a parameter.
# ARGV[1] = The application to debug
# ARGV[2] = The application's base load address
# file : map file ( as generated by GNU's ld )
#
# usage:  gawk -f GenGDBScript.awk "o/BuzTest.elf" 0xA0346000 < "o/BuzTest.map"

# Called for every line that is a section declarator
function CreateSections( name, addr, baseAddr, bStartWriting,   sname )
{
  sname = ""
  offsetAddr = strtonum(addr)

  if ( offsetAddr != 0 )
  {
    newaddr = strtonum(baseAddr) + offsetAddr

    if ( name != ".text" )
    {
      sname = sprintf ( "-s %s", name )
    } else
    {
      # We start printing section names when we find the ".text" section
      # we're simply not interested in sections before that one ( I hope. FR )
      bStartWriting = 1
    }

    if ( bStartWriting == 1 )
    {
      printf ("%s 0x%x ", sname, newaddr)
    }
  }
  return bStartWriting
}

#
# Starts writing static text to the script
#
function CreateScriptHeader( AppName )
{
  print "set remotetimeout 10"
  print "target remote localhost:2345"

  printf( "add-symbol-file %s ", AppName )
}

#
function SetBreakPoints()
{
  printf("\nhbreak main\n" )
  print "hbreak NU_Main"
  print ""
  return
}

#
# main program
#
BEGIN {
  if (ARGC < 2) {
    print "usage: AppName BaseAddr" > "/dev/stderr"
    exit 1
  }
  APP = ARGV[1];
  BASEADDR = ARGV[2];
  ARGC = 2
  ARGV[1] = "-"
  bStartWriting = 0
  CreateScriptHeader( APP )
}

# This is the regular expression looking for sections in the map file
($1 ~ /^\./) && ($2 ~ /^0x/) && ($4 == "") {
  bStartWriting = CreateSections( $1, $2, BASEADDR, bStartWriting )
}

END {
  if (ARGC < 2) {
    exit 1
  }
  SetBreakPoints()
}
